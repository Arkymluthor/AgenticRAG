version: '3.8'

services:
  # FastAPI backend service
  api:
    build:
      context: ../..
      dockerfile: backend/docker/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DEBUG=true
      - HOST=0.0.0.0
      - PORT=8000
      - CORS_ORIGINS=["*"]
      - USE_AZURE_OPENAI=${USE_AZURE_OPENAI:-false}
      # OpenAI API settings
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - OPENAI_API_BASE=${OPENAI_API_BASE:-https://api.openai.com/v1}
      - OPENAI_CHAT_MODEL=${OPENAI_CHAT_MODEL:-gpt-4}
      - OPENAI_EMBEDDING_MODEL=${OPENAI_EMBEDDING_MODEL:-text-embedding-ada-002}
      # Azure OpenAI API settings
      - AZURE_OPENAI_KEY=${AZURE_OPENAI_KEY:-}
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT:-}
      - AZURE_OPENAI_API_VERSION=${AZURE_OPENAI_API_VERSION:-2023-05-15}
      - AZURE_OPENAI_CHAT_DEPLOYMENT=${AZURE_OPENAI_CHAT_DEPLOYMENT:-}
      - AZURE_OPENAI_EMBEDDING_DEPLOYMENT=${AZURE_OPENAI_EMBEDDING_DEPLOYMENT:-}
      # Azure Cognitive Search settings
      - SEARCH_ENDPOINT=${SEARCH_ENDPOINT:-}
      - SEARCH_API_KEY=${SEARCH_API_KEY:-}
      - SEARCH_INDEX_NAME=${SEARCH_INDEX_NAME:-documents}
      # Redis settings
      - REDIS_URL=redis://redis:6379/0
      # Celery settings
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      # Application Insights settings
      - APPINSIGHTS_CONNECTION_STRING=${APPINSIGHTS_CONNECTION_STRING:-}
    volumes:
      - ../app:/app
    depends_on:
      - redis
    restart: unless-stopped

  # Celery worker service
  worker:
    build:
      context: ../..
      dockerfile: backend/docker/Dockerfile
    command: celery -A app.tasks.async_tasks.celery_app worker --loglevel=info
    environment:
      - DEBUG=true
      - USE_AZURE_OPENAI=${USE_AZURE_OPENAI:-false}
      # OpenAI API settings
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - OPENAI_API_BASE=${OPENAI_API_BASE:-https://api.openai.com/v1}
      - OPENAI_CHAT_MODEL=${OPENAI_CHAT_MODEL:-gpt-4}
      - OPENAI_EMBEDDING_MODEL=${OPENAI_EMBEDDING_MODEL:-text-embedding-ada-002}
      # Azure OpenAI API settings
      - AZURE_OPENAI_KEY=${AZURE_OPENAI_KEY:-}
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT:-}
      - AZURE_OPENAI_API_VERSION=${AZURE_OPENAI_API_VERSION:-2023-05-15}
      - AZURE_OPENAI_CHAT_DEPLOYMENT=${AZURE_OPENAI_CHAT_DEPLOYMENT:-}
      - AZURE_OPENAI_EMBEDDING_DEPLOYMENT=${AZURE_OPENAI_EMBEDDING_DEPLOYMENT:-}
      # Azure Cognitive Search settings
      - SEARCH_ENDPOINT=${SEARCH_ENDPOINT:-}
      - SEARCH_API_KEY=${SEARCH_API_KEY:-}
      - SEARCH_INDEX_NAME=${SEARCH_INDEX_NAME:-documents}
      # Redis settings
      - REDIS_URL=redis://redis:6379/0
      # Celery settings
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      # Application Insights settings
      - APPINSIGHTS_CONNECTION_STRING=${APPINSIGHTS_CONNECTION_STRING:-}
    volumes:
      - ../app:/app
    depends_on:
      - redis
    restart: unless-stopped

  # Redis service for caching, message broker, and result backend
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # Azure Functions service for document ingestion
  functions:
    build:
      context: ../..
      dockerfile: backend/docker/Dockerfile.functions
    ports:
      - "7071:7071"
    environment:
      - AzureWebJobsStorage=${AzureWebJobsStorage:-}
      - FUNCTIONS_WORKER_RUNTIME=python
      - AZURE_STORAGE_CONNECTION_STRING=${AZURE_STORAGE_CONNECTION_STRING:-}
      - AZURE_OPENAI_KEY=${AZURE_OPENAI_KEY:-}
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT:-}
      - AZURE_OPENAI_API_VERSION=${AZURE_OPENAI_API_VERSION:-2023-05-15}
      - AZURE_OPENAI_EMBEDDING_DEPLOYMENT=${AZURE_OPENAI_EMBEDDING_DEPLOYMENT:-}
      - SEARCH_ENDPOINT=${SEARCH_ENDPOINT:-}
      - SEARCH_API_KEY=${SEARCH_API_KEY:-}
      - SEARCH_INDEX_NAME=${SEARCH_INDEX_NAME:-documents}
    volumes:
      - ../functions:/app/functions
    restart: unless-stopped

volumes:
  redis_data:
